// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/examplepb/example.proto

/*
Package examplepb is a generated protocol buffer package.

It is generated from these files:
	example/examplepb/example.proto

It has these top-level messages:
	User
	Address
	Group
	CreateUserRequest
	UpdateUserRequest
	CreateUserResponse
	UpdateUserResponse
	CreateProfileResponse
	UpdateProfileResponse
	Profile
	UpdateProfileRequest
*/
package examplepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/askurydzin/protoc-gen-atlas-validate/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id      int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Profile *Profile `protobuf:"bytes,3,opt,name=profile" json:"profile,omitempty"`
	Address *Address `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Groups  []*Group `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *User) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Address struct {
	Country string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty"`
	State   string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	City    string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	Zip     string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

type Group struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Notes string `protobuf:"bytes,2,opt,name=notes" json:"notes,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type CreateUserRequest struct {
	Payload *User `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateUserRequest) GetPayload() *User {
	if m != nil {
		return m.Payload
	}
	return nil
}

type UpdateUserRequest struct {
	Payload *User `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateUserRequest) GetPayload() *User {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CreateUserResponse struct {
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UpdateUserResponse struct {
}

func (m *UpdateUserResponse) Reset()                    { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()               {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CreateProfileResponse struct {
}

func (m *CreateProfileResponse) Reset()                    { *m = CreateProfileResponse{} }
func (m *CreateProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProfileResponse) ProtoMessage()               {}
func (*CreateProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type UpdateProfileResponse struct {
}

func (m *UpdateProfileResponse) Reset()                    { *m = UpdateProfileResponse{} }
func (m *UpdateProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileResponse) ProtoMessage()               {}
func (*UpdateProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type Profile struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Notes string `protobuf:"bytes,3,opt,name=notes" json:"notes,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Profile) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type UpdateProfileRequest struct {
	Payload *Profile `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *UpdateProfileRequest) Reset()                    { *m = UpdateProfileRequest{} }
func (m *UpdateProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProfileRequest) ProtoMessage()               {}
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateProfileRequest) GetPayload() *Profile {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "example.User")
	proto.RegisterType((*Address)(nil), "example.Address")
	proto.RegisterType((*Group)(nil), "example.Group")
	proto.RegisterType((*CreateUserRequest)(nil), "example.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "example.UpdateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "example.CreateUserResponse")
	proto.RegisterType((*UpdateUserResponse)(nil), "example.UpdateUserResponse")
	proto.RegisterType((*CreateProfileResponse)(nil), "example.CreateProfileResponse")
	proto.RegisterType((*UpdateProfileResponse)(nil), "example.UpdateProfileResponse")
	proto.RegisterType((*Profile)(nil), "example.Profile")
	proto.RegisterType((*UpdateProfileRequest)(nil), "example.UpdateProfileRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users service

type UsersClient interface {
	Create(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) Create(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := grpc.Invoke(ctx, "/example.Users/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/example.Users/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersServer interface {
	Create(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	Update(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Users/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Create(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Users/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Update(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Users_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Users_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/examplepb/example.proto",
}

// Client API for Profiles service

type ProfilesClient interface {
	Create(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*CreateProfileResponse, error)
	Update(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error)
}

type profilesClient struct {
	cc *grpc.ClientConn
}

func NewProfilesClient(cc *grpc.ClientConn) ProfilesClient {
	return &profilesClient{cc}
}

func (c *profilesClient) Create(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*CreateProfileResponse, error) {
	out := new(CreateProfileResponse)
	err := grpc.Invoke(ctx, "/example.Profiles/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesClient) Update(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error) {
	out := new(UpdateProfileResponse)
	err := grpc.Invoke(ctx, "/example.Profiles/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Profiles service

type ProfilesServer interface {
	Create(context.Context, *Profile) (*CreateProfileResponse, error)
	Update(context.Context, *UpdateProfileRequest) (*UpdateProfileResponse, error)
}

func RegisterProfilesServer(s *grpc.Server, srv ProfilesServer) {
	s.RegisterService(&_Profiles_serviceDesc, srv)
}

func _Profiles_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Profiles/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServer).Create(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profiles_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Profiles/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServer).Update(ctx, req.(*UpdateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Profiles_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Profiles",
	HandlerType: (*ProfilesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Profiles_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Profiles_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/examplepb/example.proto",
}

func init() { proto.RegisterFile("example/examplepb/example.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xb1, 0x8e, 0xd3, 0x40,
	0x10, 0xc5, 0x49, 0x1c, 0x5f, 0x26, 0x22, 0xba, 0x5b, 0x02, 0x18, 0xc3, 0x41, 0x70, 0x01, 0x51,
	0xa4, 0xc4, 0xc2, 0x74, 0x07, 0x14, 0x5c, 0x0a, 0x0a, 0x28, 0x4e, 0x46, 0xd7, 0xa4, 0x39, 0x6d,
	0xe2, 0x25, 0x58, 0x38, 0xde, 0xc5, 0xbb, 0x3e, 0x91, 0x43, 0x34, 0x14, 0xfc, 0x00, 0x7f, 0xc1,
	0x4f, 0xf0, 0x11, 0x50, 0x51, 0x53, 0xf2, 0x11, 0xc8, 0xbb, 0x5e, 0xcb, 0x38, 0x2e, 0x80, 0x2a,
	0xb3, 0x33, 0x6f, 0xde, 0xcc, 0x7b, 0xbb, 0x31, 0xdc, 0x21, 0xef, 0xf0, 0x86, 0xc5, 0xc4, 0x2b,
	0x7e, 0xd9, 0x52, 0x47, 0x33, 0x96, 0x52, 0x41, 0x91, 0x55, 0x1c, 0x9d, 0x5b, 0x6b, 0x4a, 0xd7,
	0x31, 0xf1, 0x30, 0x8b, 0x3c, 0x9c, 0x24, 0x54, 0x60, 0x11, 0xd1, 0x84, 0x2b, 0x98, 0xf3, 0x62,
	0x1d, 0x89, 0xd7, 0xd9, 0x72, 0xb6, 0xa2, 0x1b, 0x0f, 0xf3, 0x37, 0x59, 0xba, 0x0d, 0x2f, 0xa2,
	0xc4, 0x93, 0xc5, 0xd5, 0x74, 0x4d, 0x92, 0x29, 0x16, 0x31, 0xe6, 0xd3, 0x73, 0x1c, 0x47, 0x21,
	0x16, 0xc4, 0xa3, 0x4c, 0xb6, 0x7b, 0x32, 0x7d, 0xa6, 0xd3, 0x8a, 0xcd, 0xfd, 0x62, 0x40, 0xe7,
	0x94, 0x93, 0x14, 0x0d, 0xa0, 0x15, 0x85, 0xb6, 0x31, 0x32, 0xc6, 0x66, 0xd0, 0x8a, 0x42, 0x84,
	0xa0, 0x93, 0xe0, 0x0d, 0xb1, 0x5b, 0x23, 0x63, 0xdc, 0x0b, 0x64, 0x8c, 0x26, 0x60, 0xb1, 0x94,
	0xbe, 0x8a, 0x62, 0x62, 0xb7, 0x47, 0xc6, 0xb8, 0xef, 0xef, 0xcf, 0xb4, 0x84, 0x13, 0x95, 0x0f,
	0x34, 0x20, 0xc7, 0xe2, 0x30, 0x4c, 0x09, 0xe7, 0x76, 0xa7, 0x86, 0x7d, 0xaa, 0xf2, 0x81, 0x06,
	0xa0, 0x7b, 0xd0, 0x5d, 0xa7, 0x34, 0x63, 0xdc, 0x36, 0x47, 0xed, 0x71, 0xdf, 0x1f, 0x94, 0xd0,
	0x67, 0x79, 0x3a, 0x28, 0xaa, 0xee, 0x19, 0x58, 0x45, 0x2f, 0xb2, 0xc1, 0x5a, 0xd1, 0x2c, 0x11,
	0xe9, 0x56, 0xee, 0xdc, 0x0b, 0xf4, 0x11, 0x0d, 0xc1, 0xe4, 0x02, 0x0b, 0xbd, 0xb9, 0x3a, 0xe4,
	0x72, 0x56, 0x91, 0xd8, 0xca, 0xbd, 0x7b, 0x81, 0x8c, 0xd1, 0x3e, 0xb4, 0x2f, 0x22, 0x26, 0xd7,
	0xeb, 0x05, 0x79, 0xe8, 0x3e, 0x00, 0x53, 0x4e, 0x2c, 0xd5, 0x1b, 0x15, 0xf5, 0x43, 0x30, 0x13,
	0x2a, 0x08, 0xd7, 0xc4, 0xf2, 0xe0, 0x3e, 0x86, 0x83, 0x79, 0x4a, 0xb0, 0x20, 0xb9, 0x8b, 0x01,
	0x79, 0x9b, 0x11, 0x2e, 0xd0, 0x7d, 0xb0, 0x18, 0xde, 0xc6, 0x14, 0x2b, 0x47, 0xfb, 0xfe, 0xe5,
	0x52, 0x91, 0x84, 0xe9, 0x6a, 0xde, 0x7d, 0xca, 0xc2, 0xff, 0xed, 0x1e, 0x02, 0xaa, 0xce, 0xe6,
	0x8c, 0x26, 0x9c, 0xe4, 0xd9, 0x2a, 0x67, 0x91, 0xbd, 0x0e, 0x57, 0x15, 0x56, 0xdf, 0x54, 0xa5,
	0xa0, 0xe0, 0xf5, 0xc2, 0x1c, 0xac, 0x22, 0xf5, 0x57, 0x8f, 0xa3, 0xb4, 0xa7, 0x5d, 0xb5, 0xe7,
	0x18, 0x86, 0x35, 0x76, 0xa5, 0x71, 0x52, 0xd7, 0xd8, 0xf4, 0x94, 0x14, 0xc0, 0xff, 0x65, 0x80,
	0x99, 0x6b, 0xe1, 0x68, 0x01, 0x5d, 0x25, 0x02, 0x39, 0x25, 0x7c, 0xc7, 0x7d, 0xe7, 0x66, 0x63,
	0x4d, 0xcb, 0xfd, 0xf8, 0xed, 0xe7, 0xe7, 0xd6, 0x81, 0xdb, 0xf5, 0xb2, 0x9c, 0xf2, 0x48, 0x4f,
	0x41, 0x9f, 0x0c, 0xe8, 0xaa, 0x55, 0x2b, 0xe4, 0x3b, 0x97, 0x53, 0x21, 0x6f, 0x30, 0x79, 0x2e,
	0xc9, 0x9f, 0x38, 0x57, 0x14, 0xb9, 0xf7, 0xbe, 0x20, 0x9f, 0x45, 0xe1, 0x87, 0x72, 0xd2, 0xe2,
	0xd0, 0x47, 0xb2, 0xde, 0x5c, 0xf6, 0xbf, 0x1b, 0xb0, 0x57, 0x78, 0xc0, 0xd1, 0x49, 0xa9, 0x78,
	0xc7, 0x20, 0xe7, 0x76, 0x4d, 0x67, 0xfd, 0x02, 0x87, 0x72, 0x9b, 0x81, 0xdb, 0xf3, 0x8a, 0x3f,
	0x25, 0x3f, 0x32, 0x26, 0xe8, 0xbc, 0x94, 0x79, 0x58, 0x93, 0xf2, 0xe7, 0x15, 0x55, 0xe8, 0x9b,
	0xdf, 0xc7, 0xf4, 0xc7, 0xd7, 0x1b, 0xad, 0x3d, 0x43, 0x0e, 0xb9, 0xeb, 0x5c, 0x2b, 0x87, 0x34,
	0xcb, 0x3a, 0x7e, 0x29, 0xe1, 0x97, 0x16, 0xcf, 0xff, 0xf5, 0xfb, 0xb5, 0xf3, 0xdd, 0x7c, 0x54,
	0x46, 0xcb, 0xae, 0x6c, 0x7b, 0xf8, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x44, 0x9f, 0xa7, 0x5d,
	0x05, 0x00, 0x00,
}
