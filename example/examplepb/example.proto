syntax = "proto3";

package example;

import "google/api/annotations.proto";

import "github.com/askurydzin/protoc-gen-atlas-validate/options/atlas_validate.proto";

option go_package = "github.com/askurydzin/protoc-gen-atlas-validate/example/examplepb;examplepb";

message User {
	int32 id = 1;
	string name = 2;
	Profile profile = 3;
	Address address = 4;
	repeated Group groups = 5;
}

message Address {
	string country = 1;
	string state = 2;
	string city = 3;
	string zip = 4;
}

message Group {
	string name = 1;
	string notes = 2;
}

message CreateUserRequest {
	User payload = 1;
}

message UpdateUserRequest {
	User payload = 1;
}

message CreateUserResponse {}

message UpdateUserResponse {}

service Users {
	rpc Create(CreateUserRequest) returns (CreateUserResponse) {
		option (google.api.http) = {
			post: "/users";
			body: "payload";
		};
	}

	rpc Update(UpdateUserRequest) returns (UpdateUserResponse) {
		option (google.api.http) = {
			put: "/users/{payload.id}";
			body: "payload";
			additional_bindings: {
				patch: "/user/{payload.id}";
				body: "payload";
			};
		};
	}
}

message CreateProfileResponse {}

message UpdateProfileResponse {}

message Profile {
	int32 id = 1;
	string name = 2;
	string notes = 3;
}

message UpdateProfileRequest {
	Profile payload = 1;
}

service Profiles {
	rpc Create(Profile) returns (CreateProfileResponse) {
		option (google.api.http) = {
			post: "/profiles";
			body: "*";
		};
	}

	rpc Update(UpdateProfileRequest) returns (UpdateProfileResponse) {
		option (atlas_validate.method_opts).allow_unknown_fields = true;
		option (google.api.http) = {
			put: "/profiles/{payload.id}";
			body: "payload";
		};
	}
}

option (atlas_validate.file_opts).allow_unknown_fields = false;
