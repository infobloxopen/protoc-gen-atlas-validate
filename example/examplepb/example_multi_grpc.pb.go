// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package examplepb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// Users2Client is the client API for Users2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Users2Client interface {
	Create2(ctx context.Context, in *User2, opts ...grpc.CallOption) (*EmptyResponse2, error)
}

type users2Client struct {
	cc grpc.ClientConnInterface
}

func NewUsers2Client(cc grpc.ClientConnInterface) Users2Client {
	return &users2Client{cc}
}

func (c *users2Client) Create2(ctx context.Context, in *User2, opts ...grpc.CallOption) (*EmptyResponse2, error) {
	out := new(EmptyResponse2)
	err := c.cc.Invoke(ctx, "/examples.foo.Users2/Create2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Users2Server is the server API for Users2 service.
// All implementations must embed UnimplementedUsers2Server
// for forward compatibility
type Users2Server interface {
	Create2(context.Context, *User2) (*EmptyResponse2, error)
	mustEmbedUnimplementedUsers2Server()
}

// UnimplementedUsers2Server must be embedded to have forward compatible implementations.
type UnimplementedUsers2Server struct {
}

func (UnimplementedUsers2Server) Create2(context.Context, *User2) (*EmptyResponse2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create2 not implemented")
}
func (UnimplementedUsers2Server) mustEmbedUnimplementedUsers2Server() {}

// UnsafeUsers2Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Users2Server will
// result in compilation errors.
type UnsafeUsers2Server interface {
	mustEmbedUnimplementedUsers2Server()
}

func RegisterUsers2Server(s grpc.ServiceRegistrar, srv Users2Server) {
	s.RegisterService(&Users2_ServiceDesc, srv)
}

func _Users2_Create2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Users2Server).Create2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.foo.Users2/Create2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Users2Server).Create2(ctx, req.(*User2))
	}
	return interceptor(ctx, in, info, handler)
}

// Users2_ServiceDesc is the grpc.ServiceDesc for Users2 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Users2_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "examples.foo.Users2",
	HandlerType: (*Users2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create2",
			Handler:    _Users2_Create2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "examplepb/example_multi.proto",
}
